<?php

use Drupal\user\UserInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * @param $route_name
 * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
 * @return string
 */
function hello_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match)
{
    switch ($route_name) {

        // Main module help for the block module.
        case 'help.page.hello':
            return '<p>' . t('This module aims at recording user connection activity'
                ) . '</p>';
    }
}

/**
 *
 */
function hello_cron() {
//   \Drupal::messenger()->addMessage(t('Hello cron'));
    $purge_days_number = \Drupal::config('hello.settings')->get('purge_days_number');
    $nb_suppressions = \Drupal::database()->delete('hello_user_statistics')
        ->condition('time', REQUEST_TIME - $purge_days_number * (24*3600), '<')
        ->execute();
    \Drupal::messenger()->addMessage(t('@nb_suppressions records have been deleted.',
        ['@nb_suppressions' => $nb_suppressions]));
}

/**
 * @param UserInterface $account
 * @throws Exception
 */
function hello_user_login(UserInterface $account) {

    \Drupal::messenger()->addMessage(t('Welcome dear %name',
        ['%name' => $account->getAccountName()]));

    //Enregistrement des connexions utilisateurs
    $database = \Drupal::database();
    $database->insert('hello_user_statistics')
              ->fields([
                'uid' => $account->id(),
                 'action'=> '1',
                'time' => REQUEST_TIME,
               ])
            ->execute();

}

    //Enregistrement des dÃ©connexions
/**
 * @param AccountInterface $account
 * @throws Exception
 */
function hello_user_logout(AccountInterface $account) {
    $database = \Drupal::database();
    $database->insert('hello_user_statistics')
        ->fields([
            'uid' => $account->id(),
            'action'=> '0',
            'time' => REQUEST_TIME,
        ])
        ->execute();

}

/*
 * implements HOOK_theme 
 */

function hello_theme($existing, $type, $theme, $path){

    return array(
        'hello_user_connexion' => array(
            'template' => 'hello-user-connexion',
            'variables' => array('count_login' => NULL, 'user' => NULL)
            ),
    );
}

/**
 * @param array $form
 * @param FormStateInterface $form_state
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function hello_form_user_admin_settings_alter(array &$form, FormStateInterface $form_state){



    $roles_config= \Drupal::config('hello.settings')->get('role_user_connexion');

    $roles= \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();
//    ksm($form);
    unset($roles['anonymous']);
    foreach ($roles as $key=>$role){
        $options[$key] = $role->label();
    }

    $form['test']=[
        '#type'=>'details',
        '#title'=>t('Roles for wich to collect activity statistics.'),
        '#open'=>TRUE,
        '#weight'=> '-100',
    ];
    $form['test']['roles']=[
        '#type'=>'checkboxes',
        '#options'=>$options,
        '#default_value'=> $roles_config,
    ];
    $form['#submit'][]='hello_form_admin_settings_submit';

}
function hello_form_admin_settings_submit(array &$form, FormStateInterface $form_state){
    $config = \Drupal::configFactory()->getEditable('hello.settings');
    $config->set('role_user_connexion',$form_state->getValue('roles'))->save();

}